class t{constructor(t,i,e,s){this.separator="Â»",this.province=t,this.subdistrict=i,this.district=e,this.zipcode=s}setGeo(t,i,e){this.districtCode=t,this.subdistrictCode=i,this.provinceCode=e}addressToString(t){return[this.subdistrict,this.district,this.province,this.zipcode].join(` ${t||this.separator} `)}}const i=i=>{let e=[],s=[];const r=[];let o;return i.lookup&&i.words&&(e=i.lookup.split("|"),s=i.words.split("|"),i=i.data),o=t=>{return"number"==typeof t&&(t=e[t]),t.replace(/[A-Z]/gi,(function(t){const i=t.charCodeAt(0);return s[i<97?i-65:26+i-97]}))},i.map(i=>{let e=1;3===i.length&&(e=2),i[e].map(s=>{s[e].map(n=>{n[e]=n[e]instanceof Array?n[e]:[n[e]],n[e].map(c=>{const a=new t(o(i[0]),o(s[0]),o(n[0]),c);2===e&&a.setGeo(n[1]||!1,s[1]||!1,i[1]||!1),r.push(a)})})})}),r};const e=new class{load(t,e,s=!1){if("string"!==(typeof t).toLowerCase())return this.db=s?i(t):t,this.db;let r;r=null==t||void 0===t?"./database/db.json":t;const o=this.loadData(r,e);return"json"===e&&(this.db=s?i(o):o),this.db}loadData(t,i){if("json"===i){return require(t)}throw new Error("This type is not supported!")}};class s{constructor(){this.multilingual=!1,this.language="en"}loadData(t,i,s=!1,r=!0,o){o&&(this.language=o),this.multilingual=s,this.processedDb=e.load(t,i,r)}query(t){const i={district:t.district?new RegExp(t.district.toString().toLowerCase().trim(),"g"):/.*/g,province:t.province?new RegExp(t.province.toString().toLowerCase().trim(),"g"):/.*/g,subdistrict:t.subdistrict?new RegExp(t.subdistrict.toString().toLowerCase().trim(),"g"):/.*/g,zipcode:t.zipcode?new RegExp(t.zipcode.toString().toLowerCase().trim(),"g"):/.*/g};if(this.multilingual)try{return this.processedDb.filter(t=>(t[`province_${this.language}`]||" ").toString().toLowerCase().match(i.province)&&(t[`subdistrict_${this.language}`]||" ").toString().toLowerCase().match(i.subdistrict)&&(t[`district_${this.language}`]||" ").toString().toLowerCase().match(i.district)&&(t.zipcode||" ").toString().toLowerCase().match(i.zipcode)).map(t=>({district:t[`district_${this.language}`],province:t[`province_${this.language}`],subdistrict:t[`subdistrict_${this.language}`],zipcode:t.zipcode}))}catch(t){return[]}else try{return this.processedDb.filter(t=>(t.province||" ").toString().toLowerCase().match(i.province)&&(t.subdistrict||" ").toString().toLowerCase().match(i.subdistrict)&&(t.district||" ").toString().toLowerCase().match(i.district)&&(t.zipcode||" ").toString().toLowerCase().match(i.zipcode))}catch(t){return[]}}queryByType(t,i){return this.uniq_fast(this.query(t),i)}uniq_fast(t,i){const e={},s=[],r=t.length;let o=0;for(let n=0;n<r;n++){const r=t[n][i];1!==e[r]&&(e[r]=1,s[o++]=t[n][i])}return s}}const r=new s;export default r;export{s as AddressService};
